{"version":3,"sources":["ui/todo/store/types.js","ui/todo/store/action.js","ui/todo/components/EditItem/EditItem.jsx","ui/todo/dnd/types.js","ui/todo/components/TodoItem/TodoItem.jsx","ui/shared/components/Button/Button.jsx","ui/todo/components/NewTask/NewTask.jsx","ui/todo/pages/TodoList/TodoList.jsx","ui/todo/@core/Todo.jsx","ui/todo/store/reducer.js","ui/navigation/components/NewList/NewList.jsx","ui/navigation/components/EditLinkTitle/EditLinkTitle.jsx","ui/navigation/components/LinkTitle/LinkTitle.jsx","ui/navigation/components/LinkItem/LinkItem.jsx","ui/navigation/components/Links/Links.jsx","ui/navigation/routers/AppRouter.jsx","ui/navigation/@core/Navigation.jsx","App.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["GET_TODO","COMPLETED_TOGGLE","REMOVE_TASK","EDIT_TASK_TOGGLE","CHANGE_TASK_TITLE","ADD_TASK","ADD_LIST","REMOVE_LIST","EDIT_LIST_TOGGLE","CHANGE_LIST_NAME","DROP_IN_TODO","DROP_IN_COMPLETED","SORTABLE","editToggle","id","type","types","payload","EditItem","todo","index","dispatch","useDispatch","onEditToggle","edit","className","cn","todo__onEdit","todo__onEdit_completed","completed","onChange","e","info","title","target","value","onKeyUp","keyCode","onBlur","autoFocus","todo__title","todo__title_completed","TODO_ITEM","COMPLETED_ITEM","TodoItem","ref","useRef","useDrag","item","collect","monitor","isDragging","drag","useDrop","accept","isOver","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","sortable","opacity","background","drop","ListItem","onDoubleClick","style","Checkbox","completedToggle","checked","IconButton","edge","onClick","Button","isAddBtn","isListBtn","isLinkBtn","isRemoveBtn","children","btn","add","remove","list","linkRemove","NewTask","listId","useForm","register","handleSubmit","onSubmit","task","Date","now","newTask","required","placeholder","TodoList","numList","useSelector","store","dropInTodo","isOverTodo","canDrop","dropTodo","dropInCompleted","isOverCompleted","dropCompleted","List","map","Todo","initialState","removable","NewList","onAddList","newListToggle","EditLinkTitle","onEditList","newName","newTitle","LinkTitle","to","replace","length","LinkItem","Links","useState","isAddNewList","setIsAddNewList","lists","newListTemplate","oldTitle","AppRouter","i","path","Navigation","App","useEffect","dispacth","a","fetch","process","response","json","forEach","push","DndProvider","backend","HTML5Backend","rootReducer","combineReducers","state","action","concat","filter","arrayMoveImmutable","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8260fea9.chunk.js","sourcesContent":["export const GET_TODO = 'GET_TODO';\r\nexport const COMPLETED_TOGGLE = 'COMPLETED_TOGGLE';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const EDIT_TASK_TOGGLE = 'EDIT_TASK_TOGGLE';\r\nexport const CHANGE_TASK_TITLE = 'CHANGE_TASK_TITLE';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const REMOVE_LIST = 'REMOVE_LIST';\r\nexport const EDIT_LIST_TOGGLE = 'EDIT_LIST_TOGGLE';\r\nexport const CHANGE_LIST_NAME = 'CHANGE_LIST_NAME';\r\nexport const DROP_IN_TODO = 'DROP_IN_TODO';\r\nexport const DROP_IN_COMPLETED = 'DROP_IN_COMPLETED';\r\nexport const SORTABLE = 'SORTABLE';\r\n","import * as types from './types';\r\n\r\nexport const getTodo = () => {\r\n  return async (dispacth) => {\r\n    const completed = [];\r\n    const todo = [];\r\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/todos?_limit=5`);\r\n    const json = await response.json();\r\n    json.forEach((item) => {\r\n      item.edit = false;\r\n      item.listId = 1;\r\n      item.completed ? completed.push(item) : todo.push(item);\r\n    });\r\n\r\n    dispacth({ type: types.GET_TODO, payload: { todo, completed } });\r\n  };\r\n};\r\n\r\nexport const completedToggle = (todo) => ({\r\n  type: types.COMPLETED_TOGGLE,\r\n  payload: todo,\r\n});\r\n\r\nexport const removeTask = (task) => ({ type: types.REMOVE_TASK, payload: task });\r\n\r\nexport const editToggle = (id) => ({ type: types.EDIT_TASK_TOGGLE, payload: id });\r\n\r\nexport const changeTitle = (info) => ({ type: types.CHANGE_TASK_TITLE, payload: info });\r\n\r\nexport const addTask = (task) => ({ type: types.ADD_TASK, payload: task });\r\n\r\nexport const addList = (list) => ({ type: types.ADD_LIST, payload: list });\r\n\r\nexport const removeList = (listId) => ({ type: types.REMOVE_LIST, payload: listId });\r\n\r\nexport const editListToggle = (listId) => ({\r\n  type: types.EDIT_LIST_TOGGLE,\r\n  payload: listId,\r\n});\r\n\r\nexport const changeListName = (newName) => ({\r\n  type: types.CHANGE_LIST_NAME,\r\n  payload: newName,\r\n});\r\n\r\nexport const dropInTodo = (item) => ({\r\n  type: types.DROP_IN_TODO,\r\n  payload: item,\r\n});\r\n\r\nexport const dropInCompleted = (item) => ({\r\n  type: types.DROP_IN_COMPLETED,\r\n  payload: item,\r\n});\r\n\r\nexport const sortable = (todo, dragIndex, hoverIndex) => ({\r\n  type: types.SORTABLE,\r\n  payload: { todo, hoverIndex, dragIndex },\r\n});\r\n\r\nexport const sortable2 = (dragIndex, hoverIndex, state) => {\r\n  return () => ({ type: types.SORTABLE, payload: { hoverIndex, dragIndex } });\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport cn from 'classnames';\r\n\r\nimport { changeTitle, editToggle } from '../../store/action';\r\n\r\nimport './EditItem.scss';\r\n\r\nexport const EditItem = ({ todo, index }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeTitle = (e) => {\r\n    dispatch(changeTitle({ title: e.target.value, todo }));\r\n  };\r\n\r\n  const onEditToggle = () => {\r\n    dispatch(editToggle(todo));\r\n  };\r\n\r\n  const onChangeTitleKeyUp = (e) => {\r\n    const ENTER_KEY = 13;\r\n    if (e.keyCode === ENTER_KEY) onEditToggle();\r\n  };\r\n\r\n  return todo.edit ? (\r\n    <input\r\n      className={cn({\r\n        todo__onEdit: true,\r\n        todo__onEdit_completed: todo.completed,\r\n      })}\r\n      onChange={onChangeTitle}\r\n      onKeyUp={onChangeTitleKeyUp}\r\n      onBlur={onEditToggle}\r\n      type=\"text\"\r\n      value={todo.title}\r\n      autoFocus\r\n    />\r\n  ) : (\r\n    <h5\r\n      className={cn({\r\n        todo__title: true,\r\n        todo__title_completed: todo.completed,\r\n      })}\r\n    >\r\n      {todo.title}, index:{index}\r\n    </h5>\r\n  );\r\n};\r\n","export const TODO_ITEM = 'TODO_ITEM';\r\nexport const COMPLETED_ITEM = 'COMPLETED_ITEM';\r\n","import { useCallback, useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { Checkbox, IconButton, ListItem } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { completedToggle, editToggle, removeTask, sortable } from '../../store/action';\r\nimport { EditItem } from '../EditItem/EditItem';\r\nimport { COMPLETED_ITEM, TODO_ITEM } from '../../dnd/types';\r\n\r\nimport './TodoItem.scss';\r\n\r\nexport const TodoItem = ({ todo, index }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = () => {\r\n    dispatch(completedToggle(todo));\r\n  };\r\n  const onRemove = () => {\r\n    dispatch(removeTask(todo));\r\n  };\r\n\r\n  const onEditToggle = () => {\r\n    dispatch(editToggle(todo));\r\n  };\r\n  //   ****   //\r\n\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag(\r\n    () => ({\r\n      type: todo.completed ? COMPLETED_ITEM : TODO_ITEM,\r\n      item: { todo, index },\r\n      collect: (monitor) => {\r\n        return {\r\n          isDragging: monitor.isDragging(),\r\n        };\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: todo.completed ? COMPLETED_ITEM : TODO_ITEM,\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n    hover(item, monitor) {\r\n      if (!ref.current) return;\r\n\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (dragIndex === hoverIndex) return;\r\n\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      dispatch(sortable(item.todo, dragIndex, hoverIndex));\r\n\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0.4 : 1;\r\n  const background = isOver ? 'rgb(188,251,255)' : '';\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <ListItem\r\n      ref={ref}\r\n      onDoubleClick={onEditToggle}\r\n      className=\"todo__list-item\"\r\n      style={{ opacity, background }}\r\n    >\r\n      <div className=\"todo__check\">\r\n        <Checkbox\r\n          id={todo.id + ''}\r\n          onChange={onChange}\r\n          className=\"todo__input\"\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n        />\r\n        <EditItem todo={todo} index={index} />\r\n      </div>\r\n      <IconButton edge=\"end\" aria-label=\"delete\" onClick={onRemove}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </ListItem>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport cn from 'classnames';\r\n\r\nimport './Button.scss';\r\n\r\nexport const Button = ({\r\n  onClick,\r\n  isAddBtn,\r\n  isListBtn,\r\n  isLinkBtn,\r\n  isRemoveBtn,\r\n  children,\r\n}) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={cn({\r\n      btn: true,\r\n      add: isAddBtn,\r\n      remove: isRemoveBtn,\r\n      list: isListBtn,\r\n      linkRemove: isLinkBtn,\r\n    })}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Button } from 'ui/shared';\r\nimport { addTask } from '../../store/action';\r\n\r\nimport './NewTask.scss';\r\n\r\nexport const NewTask = ({ listId }) => {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const newTask = (title, listId) => ({\r\n    listId,\r\n    edit: false,\r\n    completed: false,\r\n    title,\r\n    id: Date.now(),\r\n  });\r\n\r\n  const onSubmit = ({ title }) => {\r\n    dispatch(addTask(newTask(title, listId)));\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo__form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        className=\"todo__new-task\"\r\n        {...register('title', { required: true })}\r\n        placeholder=\"title\"\r\n      />\r\n      <Button type=\"submit\" isAddBtn={true}>\r\n        Add Task\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { List } from '@mui/material';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { TodoItem } from '../../components/TodoItem';\r\nimport { NewTask } from '../../components/NewTask';\r\nimport { COMPLETED_ITEM, TODO_ITEM } from '../../dnd/types';\r\nimport { dropInCompleted, dropInTodo } from '../../store/action';\r\n\r\nimport './TodoList.scss';\r\n\r\nexport const TodoList = ({ numList }) => {\r\n  const list = useSelector((store) => store.todo[numList]);\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ isOverTodo }, dropTodo] = useDrop({\r\n    accept: COMPLETED_ITEM,\r\n    drop: (item) => dispatch(dropInTodo(item)),\r\n    collect: (monitor) => ({\r\n      isOverTodo: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  });\r\n\r\n  const [{ isOverCompleted }, dropCompleted] = useDrop({\r\n    accept: TODO_ITEM,\r\n    drop: (item) => dispatch(dropInCompleted(item)),\r\n    collect: (monitor) => ({\r\n      isOverCompleted: !!monitor.isOver(),\r\n    }),\r\n  });\r\n  return (\r\n    <div className=\"todo body\">\r\n      <h2 className=\"todo__header\">{list.title}</h2>\r\n      <List ref={dropTodo} className=\"todo__todo list\">\r\n        {list.list.todo?.map((todo, index) => (\r\n          <TodoItem key={todo.id} todo={todo} index={index} />\r\n        ))}\r\n      </List>\r\n      <List ref={dropCompleted} className=\"todo__completed list\">\r\n        {list.list.completed?.map((todo, index) => (\r\n          <TodoItem key={todo.id} todo={todo} index={index} />\r\n        ))}\r\n      </List>\r\n      <NewTask listId={numList} />\r\n    </div>\r\n  );\r\n};\r\n","import { TodoList } from '../pages/TodoList';\r\n\r\nexport const Todo = ({ numList }) => <TodoList numList={numList} />;\r\n","import { arrayMoveImmutable } from 'array-move';\r\nimport * as types from './types';\r\n\r\nconst initialState = [\r\n  {\r\n    title: 'important',\r\n    removable: false,\r\n    listId: 0,\r\n    list: {\r\n      todo: [\r\n        {\r\n          listId: 0,\r\n          id: 1,\r\n          title: '0',\r\n          completed: false,\r\n          edit: false,\r\n        },\r\n        {\r\n          listId: 0,\r\n          id: 2,\r\n          title: '1',\r\n          completed: false,\r\n          edit: false,\r\n        },\r\n        {\r\n          listId: 0,\r\n          id: 3,\r\n          title: '2',\r\n          completed: false,\r\n          edit: false,\r\n        },\r\n        {\r\n          listId: 0,\r\n          id: 4,\r\n          title: '3',\r\n          completed: false,\r\n          edit: false,\r\n        },\r\n      ],\r\n      completed: [\r\n        {\r\n          listId: 0,\r\n          id: 5,\r\n          title: 'et porro tempora',\r\n          completed: true,\r\n          edit: false,\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    title: 'todo list',\r\n    removable: false,\r\n    listId: 1,\r\n    list: {\r\n      todo: [],\r\n      completed: [],\r\n    },\r\n  },\r\n];\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_TODO:\r\n      return state.map((item, i) => {\r\n        if (i === 1) {\r\n          return {\r\n            ...item,\r\n            list: {\r\n              ...item.list,\r\n              todo: item.list.todo.concat(action.payload.todo),\r\n              completed: item.list.completed.concat(action.payload.completed),\r\n            },\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n\r\n    case types.COMPLETED_TOGGLE:\r\n      return state.map((list, i) => {\r\n        if (action.payload.listId !== i) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              todo: action.payload.completed\r\n                ? state[i].list.todo.concat([\r\n                    { ...action.payload, completed: !action.payload.completed },\r\n                  ])\r\n                : state[i].list.todo.filter((i) => i.id !== action.payload.id),\r\n\r\n              completed: !action.payload.completed\r\n                ? state[i].list.completed.concat([\r\n                    { ...action.payload, completed: !action.payload.completed },\r\n                  ])\r\n                : state[i].list.completed.filter((i) => i.id !== action.payload.id),\r\n            },\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.REMOVE_TASK:\r\n      return state.map((list, i) => {\r\n        if (action.payload.listId !== i) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              todo: !action.payload.completed\r\n                ? state[i].list.todo.filter((task) => task.id !== action.payload.id)\r\n                : state[i].list.todo,\r\n              completed: action.payload.completed\r\n                ? state[i].list.completed.filter((task) => task.id !== action.payload.id)\r\n                : state[i].list.completed,\r\n            },\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.EDIT_TASK_TOGGLE:\r\n      return state.map((list, i) => {\r\n        if (action.payload.listId !== i) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              todo: state[i].list.todo.map((task) => {\r\n                if (task.id !== action.payload.id && !task.edit) {\r\n                  return task;\r\n                } else {\r\n                  return {\r\n                    ...task,\r\n                    title: task.title ? task.title : task.oldTitle,\r\n                    edit: !task.edit,\r\n                    oldTitle: task.title,\r\n                  };\r\n                }\r\n              }),\r\n              completed: state[i].list.completed.map((task) => {\r\n                if (task.id !== action.payload.id && !task.edit) {\r\n                  return task;\r\n                } else {\r\n                  return {\r\n                    ...task,\r\n                    title: task.title ? task.title : task.oldTitle,\r\n                    edit: !task.edit,\r\n                    oldTitle: task.title,\r\n                  };\r\n                }\r\n              }),\r\n            },\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.CHANGE_TASK_TITLE:\r\n      return state.map((list, i) => {\r\n        if (action.payload.todo.listId !== i) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              todo: state[i].list.todo.map((task) => {\r\n                if (task.id !== action.payload.todo.id) {\r\n                  return task;\r\n                } else {\r\n                  return {\r\n                    ...task,\r\n                    title: action.payload.title,\r\n                  };\r\n                }\r\n              }),\r\n              completed: state[i].list.completed.map((task) => {\r\n                if (task.id !== action.payload.todo.id) {\r\n                  return task;\r\n                } else {\r\n                  return {\r\n                    ...task,\r\n                    title: action.payload.title,\r\n                  };\r\n                }\r\n              }),\r\n            },\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.ADD_TASK:\r\n      return state.map((list, i) => {\r\n        if (action.payload.listId !== i) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              ...list.list,\r\n              todo: list.list.todo.concat([action.payload]),\r\n            },\r\n          };\r\n        }\r\n      });\r\n    case types.ADD_LIST:\r\n      return state.concat([action.payload]);\r\n\r\n    case types.REMOVE_LIST:\r\n      return state.filter((item) => item.listId !== action.payload);\r\n\r\n    case types.EDIT_LIST_TOGGLE:\r\n      return state.map((list) => {\r\n        if (list.listId !== action.payload) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            title: list.title || list.oldTitle,\r\n            edit: !list.edit,\r\n            oldTitle: list.title,\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.CHANGE_LIST_NAME:\r\n      return state.map((list) => {\r\n        if (list.listId !== action.payload.listId) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            title: action.payload.newTitle,\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.DROP_IN_TODO:\r\n      return state.map((list) => {\r\n        if (list.listId !== action.payload.todo.listId) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              ...list.list,\r\n              todo: list.list.todo.concat([{ ...action.payload.todo, completed: false }]),\r\n              completed: list.list.completed.filter(\r\n                (item) => item.id !== action.payload.todo.id\r\n              ),\r\n            },\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.DROP_IN_COMPLETED:\r\n      return state.map((list) => {\r\n        if (list.listId !== action.payload.todo.listId) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              ...list.list,\r\n              todo: list.list.todo.filter((item) => item.id !== action.payload.todo.id),\r\n              completed: list.list.completed.concat([\r\n                { ...action.payload.todo, completed: true },\r\n              ]),\r\n            },\r\n          };\r\n        }\r\n      });\r\n\r\n    case types.SORTABLE:\r\n      return state.map((list) => {\r\n        if (list.listId !== action.payload.todo.listId) {\r\n          return list;\r\n        } else {\r\n          return {\r\n            ...list,\r\n            list: {\r\n              ...list.list,\r\n              todo: action.payload.todo.completed\r\n                ? list.list.todo\r\n                : arrayMoveImmutable(\r\n                    list.list.todo,\r\n                    action.payload.dragIndex,\r\n                    action.payload.hoverIndex\r\n                  ),\r\n\r\n              completed: !action.payload.todo.completed\r\n                ? list.list.completed\r\n                : arrayMoveImmutable(\r\n                    list.list.completed,\r\n                    action.payload.dragIndex,\r\n                    action.payload.hoverIndex\r\n                  ),\r\n            },\r\n          };\r\n        }\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useForm } from 'react-hook-form';\r\n\r\nimport { Button } from 'ui/shared';\r\n\r\nimport './NewList.scss';\r\n\r\nexport const NewList = ({ onAddList, placeholder, newListToggle }) => {\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onAddNewList = ({ title }) => {\r\n    onAddList(title);\r\n    newListToggle();\r\n  };\r\n\r\n  return (\r\n    <form className=\"links__form\" onSubmit={handleSubmit(onAddNewList)}>\r\n      <input\r\n        className=\"links__new-task\"\r\n        placeholder={placeholder}\r\n        {...register('title', { required: true, onBlur: newListToggle })}\r\n        autoFocus\r\n      />\r\n      <Button type=\"submit\" isListBtn={true}>\r\n        +\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n","import { changeListName } from 'ui/todo/store';\r\n\r\nexport const EditLinkTitle = ({ list, onEditList, dispatch }) => {\r\n  const onChangeListName = (e) => {\r\n    dispatch(changeListName({ newTitle: e.target.value, listId: list.listId }));\r\n  };\r\n  return (\r\n    <form className=\"links__edit-form\" onSubmit={onEditList}>\r\n      <input\r\n        className=\"links__edit-name\"\r\n        type=\"text\"\r\n        onChange={onChangeListName}\r\n        value={list.title}\r\n        onBlur={onEditList}\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport { Button } from 'ui/shared';\r\nimport { removeList } from 'ui/todo/store/action';\r\n\r\nexport const LinkTitle = ({ list, dispatch }) => {\r\n  const onRemoveList = () => {\r\n    dispatch(removeList(list.listId));\r\n  };\r\n  return (\r\n    <Link className=\"links__item\" to={`${list.title.replace(' ', '_')}${list.listId}`}>\r\n      {list.title}\r\n      {list.list.todo.length ? <span>{list.list.todo.length}</span> : ''}\r\n      {list.removable && (\r\n        <Button isRemoveBtn={true} isLinkBtn={true} onClick={onRemoveList}>\r\n          +\r\n        </Button>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport { editListToggle } from 'ui/todo/store';\r\nimport { EditLinkTitle } from '../EditLinkTitle/EditLinkTitle';\r\nimport { LinkTitle } from '../LinkTitle';\r\n\r\nimport './LinkItem.scss';\r\n\r\nexport const LinkItem = ({ list }) => {\r\n  const dispatch = useDispatch();\r\n  const onEditList = () => {\r\n    dispatch(editListToggle(list.listId));\r\n  };\r\n  return (\r\n    <li key={list.listId} className={'links__li'} onDoubleClick={onEditList}>\r\n      {!list.removable || !list.edit ? (\r\n        <LinkTitle list={list} dispatch={dispatch} />\r\n      ) : (\r\n        <EditLinkTitle list={list} onEditList={onEditList} dispatch={dispatch} />\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { addList } from 'ui/todo/store';\r\nimport { NewList } from '../NewList';\r\nimport { LinkItem } from '../LinkItem';\r\n\r\nimport './Links.scss';\r\n\r\nexport const Links = () => {\r\n  const [isAddNewList, setIsAddNewList] = useState(false);\r\n  const lists = useSelector((store) => store.todo);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddList = (title) => {\r\n    const newListTemplate = {\r\n      title,\r\n      removable: true,\r\n      listId: lists.length,\r\n      edit: false,\r\n      oldTitle: title,\r\n      list: {\r\n        todo: [],\r\n        completed: [],\r\n      },\r\n    };\r\n    dispatch(addList(newListTemplate));\r\n  };\r\n\r\n  const newListToggle = () => {\r\n    setIsAddNewList(!isAddNewList);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"links\">\r\n      <ul className=\"links__list\">\r\n        {lists.map((list) => (\r\n          <LinkItem key={list.listId} list={list} />\r\n        ))}\r\n        {isAddNewList ? (\r\n          <li>\r\n            <NewList onAddList={onAddList} newListToggle={newListToggle} />\r\n          </li>\r\n        ) : (\r\n          <li className=\"list-add\" onClick={newListToggle}>\r\n            <span className=\"list-add__plus\">+</span>\r\n            <p className=\"list-add__title\">Add List</p>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Todo } from '../../todo';\r\nimport { Links } from '../components/Links';\r\n\r\nimport './AppRouter.scss';\r\n\r\nexport const AppRouter = () => {\r\n  const lists = useSelector((store) => store.todo);\r\n  return (\r\n    <Router>\r\n      <div className=\"navigation\">\r\n        <Links />\r\n        <Switch>\r\n          {lists.map((item, i) => (\r\n            <Route key={i} path={`/${item.title.replace(' ', '_')}${i}`}>\r\n              <Todo numList={i} />\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { AppRouter } from '../routers';\r\n\r\nexport const Navigation = () => <AppRouter />;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { DndProvider } from 'react-dnd';\r\n\r\nimport { Navigation } from './ui/navigation';\r\nimport { getTodo } from 'ui/todo/store';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTodo());\r\n  }, []);\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"App\">\r\n        <Navigation />\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { todoReducer } from '../../ui/todo/store';\r\n\r\nexport const rootReducer = combineReducers({\r\n  todo: todoReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport { store } from './store';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}